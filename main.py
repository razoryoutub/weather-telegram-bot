from aiogram import Bot, Dispatcher, executor, types
from sqlighter import SQLighter
import logging, asyncio, time, pyowm, random, aiohttp, schedule
import emoji

logging.basicConfig(level=logging.INFO)
owm = pyowm.OWM('dbeee7264d80b183568973e21e1633fd', language = "ru")


#telegram bot

token='915096497:AAFvPSbMpvjdtNSucGNwSy6afA8UURu89nI'




#testbot

#token = '1225831912:AAG60sUGFoeRVePSufgLFM0Xaat176T2t1o'



bot = Bot(token)

dp = Dispatcher(bot)
db = SQLighter('db.db')


@dp.message_handler(commands=['start', 'help'])
async def handle_start_help(message: types.Message):
	r = random.randint(0,2)
	if r == 0:
		await message.answer('–ü—Ä–∏–≤–µ—Ç, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –º–µ—Å—Ç–æ, –∞ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –≤ –Ω—ë–º ü§î')
	elif r == 1:
		await message.answer('–í—Å—ë –ø—Ä–æ—Å—Ç–æ, —Å —Ç–µ–±—è –≥–æ—Ä–æ–¥ —Å –º–µ–Ω—è –ø–æ–≥–æ–¥–∞, –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ...')
	elif r == 2:
		await message.answer('–ö—É, –ø–∏—à–∏ –≥–æ—Ä–æ–¥, —è –Ω–∞–ø–∏—à—É —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –≥—Ä–∞–¥—É—Å–æ–≤, –∫–∞–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –∏ —Ç.–¥.')
	await message.answer('–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –≥–æ—Ä–æ–¥–µ:\n/subscribe "–≥–æ—Ä–æ–¥"')
	await message.answer('–ê –µ—â—ë –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –∫–æ–º–∞–Ω–¥–æ–π /forecast "–≥–æ—Ä–æ–¥"')
	if db.subscriber_exists(message.from_user.id) == 'da':
		pass
	else:
		# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
		db.add_subscriber(message.from_user.id)
		await bot.send_message(214196761, '{0} added'.format(message.from_user.id))



@dp.message_handler(commands=['subscribe'])
async def subscribe(message: types.Message):
	city = message.text[11:]
	if db.subscriber_exists(message.from_user.id) == 'da':
		if db.subscription_status(message.from_user.id):
			city = str(db.subscription_city(message.from_user.id))
			city = city[3:-4]
			await message.answer("–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≥–æ—Ä–æ–¥: {0}!\n—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ 10 —É—Ç—Ä–∞(–ú–°–ö)\n–ø–æ–∑–∂–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏\n–¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ –Ω–∞–ø–∏—à–∏ /unsubscribe".format(city))
		else:
			if city == "":
				city = '–º–æ—Å–∫–≤–∞'
				db.update_subscription(message.from_user.id, True, city)
				await message.answer('–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –Ω–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –≥–æ—Ä–æ–¥\n–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞ –º–æ—Å–∫–≤–∞\n–¥–ª—è –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ –≥–æ—Ä–æ–¥–∞ -\n1. /unsubscribe\n2. /subscribe "–≥–æ—Ä–æ–¥"')
			else:
				db.update_subscription(message.from_user.id, True, city)
				await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –≤ –≥–æ—Ä–æ–¥–µ: {0}\n–ø–æ–≥–æ–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ 10 —É—Ç—Ä–∞(–ú–°–ö)\n–ø–æ–∑–∂–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏\n–¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ –Ω–∞–ø–∏—à–∏ /unsubscribe".format(city))
	else:
		if city == "":
			city = '–º–æ—Å–∫–≤–∞'
			db.add_subscriber(message.from_user.id, True)
			db.update_subscription(message.from_user.id, True, city)
			await bot.send_message(214196761, '{0} added'.format(message.from_user.id))
			await message.answer('–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –Ω–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –≥–æ—Ä–æ–¥\n–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞ –º–æ—Å–∫–≤–∞\n–¥–ª—è –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ –≥–æ—Ä–æ–¥–∞ -\n1. /unsubscribe\n2. /subscribe "–≥–æ—Ä–æ–¥"')
		else:
			# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
			db.add_subscriber(message.from_user.id, True)
			db.update_subscription(message.from_user.id, True, city)
			await bot.send_message(214196761, '{0} added'.format(message.from_user.id))
			await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –≤ –≥–æ—Ä–æ–¥–µ: {0}\n–ø–æ–≥–æ–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ 10 —É—Ç—Ä–∞(–ú–°–ö)\n–ø–æ–∑–∂–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏\n–¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ –Ω–∞–ø–∏—à–∏ /unsubscribe".format(city))


			

@dp.message_handler(commands=['unsubscribe'])
async def unsubscribe(message: types.Message):
	if db.subscriber_exists(message.from_user.id) == 'da':
		if (db.subscription_status(message.from_user.id)):
			db.update_subscription(message.from_user.id, False)
			await message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.\n–¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ - /subscribe "–≥–æ—Ä–æ–¥"')
		else:
			await message.answer('–í—ã –∏ —Ç–∞–∫ –Ω–∏ –Ω–∞ —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã\n–¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ - /subscribe "–≥–æ—Ä–æ–¥"')
	else:
		# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π
		db.add_subscriber(message.from_user.id, False)
		await bot.send_message(214196761, '{0} added'.format(message.from_user.id))
		await message.answer('–í—ã –∏ —Ç–∞–∫ –Ω–∏ –Ω–∞ —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã\n–¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ - /subscribe "–≥–æ—Ä–æ–¥"')



@dp.message_handler(commands=['forecast'])
async def unsubscribe(message: types.Message):
	city = str(message.text[10:])
	if city == '':
		await message.answer('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /forecast "–≥–æ—Ä–æ–¥"')
		if db.subscriber_exists(message.from_user.id) == 'da':
			pass
		else:
			db.add_subscriber(message.from_user.id, False)
			await bot.send_message(214196761, '{0} added'.format(message.from_user.id))
	else:
		observation = owm.weather_at_place(city)
		w = observation.get_weather()
		fc1 = owm.three_hours_forecast(city)
		f = fc1.get_forecast()
		reception_date = str(f)
		reception_date = reception_date[55:65]
		answer = ""
		for w in f:
			time = str(w.get_reference_time('iso'))
			date = time[:10] 
			if date == reception_date:
				time = str(time[11:16])
				temp = str(w.get_temperature('celsius')["temp"])
				detailed_status = w.get_detailed_status()
				not_detailed = w.get_status()
				answer1 = "{0}:\n{1}{3} {2}¬∫C\n\n".format(time,detailed_status,temp,emoji.get_emoji(not_detailed))
				answer = answer + answer1
		await message.answer('–ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –≥–æ—Ä–æ–¥–∞: ' +city + '\n\n' + answer)
		if db.subscriber_exists(message.from_user.id) == 'da':
			pass
		else:
			# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π
			db.add_subscriber(message.from_user.id, False)
			await bot.send_message(214196761, '{0} added'.format(message.from_user.id))
			



@dp.message_handler(content_types=['document', 'audio', 'sticker', 'photo', 'entities', 'animation', 'video', 'video_note', 'voice', 'contact', 'game', 'poll']) 
async def handle_docs_audio(message: types.Message):
	r = random.randint(0,2)
	if r == 0:
	    await message.answer('–Ø –∂–¥–∞–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –Ω–æ —ç—Ç–æ —Ç–æ–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ')
	elif r == 1:
	    await message.answer('–û–≥–æ, —Ñ–∞–π–ª–∏–∫, –ø—Ä–∏–∫–æ–ª—å–Ω–æ')
	elif r == 2:
	    await message.answer('—è –∫–æ–Ω–µ—á–Ω–æ –ø–æ—Å–º–æ—Ç—Ä—é —ç—Ç–æ –Ω–∞ –¥–æ—Å—É–≥–µ, –Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ —á–µ–º —è –æ–±—ã—á–Ω–æ –∑–∞–Ω–∏–º–∞—é—Å—å ü§ñ')
	if db.subscriber_exists(message.from_user.id) == 'da':
		pass
	else:
		# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
		db.add_subscriber(message.from_user.id)
		await bot.send_message(214196761, '{0} added'.format(message.from_user.id))
		
 


@dp.message_handler(content_types=['location'])
async def by_location(message: types.Message):
	f = open('location.txt', 'a')
	f.write(str(message.from_user.id) + '  ' + str(message.location.latitude) + '  ' + str(message.location.longitude) + '\n')
	f.close()
	try:
		await message.answer('–ø–æ–∫–∞–∑–∞–Ω–∞ –ø–æ–≥–æ–¥–∞ –≤–æ–∑–ª–µ –±–ª–∏–∂–∞–π—à–µ–π –º–µ—Ç–µ–æ—Å—Ç–∞–Ω—Ü–∏–∏')
		observation = owm.weather_at_coords(int(message.location.latitude), int(message.location.longitude))
		w = observation.get_weather()
		l = observation.get_location()
		detailed_status = w.get_detailed_status()
		not_detailed = w.get_status()
		answer = ("–í –≥–æ—Ä–æ–¥–µ "+ l.get_name() + " —Å–µ–π—á–∞—Å –Ø—Å–Ω–æ"+  str(emoji.get_emoji(not_detailed)) +"\n")
		answer += ("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + str(w.get_temperature('celsius')["temp"]) + "¬∫C \n")
		answer += ("–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: " + str(w.get_wind()["speed"]) + "–º/—Å\n")
		answer += ("–í–ª–∞–∂–Ω–æ—Å—Ç—å: " + str(w.get_humidity()) + "% \n\n")
		await message.answer(answer)
	except:
		await message.answer('–ø–æ—Ö–æ–∂–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ \n –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
	if db.subscriber_exists(message.from_user.id) == 'da':
		pass
	else:
		# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
		db.add_subscriber(message.from_user.id)
		await bot.send_message(214196761, '{0} added'.format(message.from_user.id))
		



@dp.message_handler( content_types=['text'])
async def by_massage(message: types.Message):
	if ((message.text[0:4].capitalize() == 'Push') and (message.from_user.id == 214196761)):
		push_text = str(message.text[5:])
		await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞')
		name = 0
		try:
			while name < (db.all_users()[-1][0]-4):
				await bot.send_message(db.all_users()[name][1], push_text)
				name +=1
		except:
			await bot.send_message(214196761, "–æ—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–ª—è " + str(db.all_users()[name][1]))
	else:
		try:
			observation = owm.weather_at_place(message.text)
			w = observation.get_weather()
			detailed_status = w.get_detailed_status()
			not_detailed = w.get_status()
			answer = ("–í –≥–æ—Ä–æ–¥–µ "+ message.text + " —Å–µ–π—á–∞—Å –Ø—Å–Ω–æ"+  str(emoji.get_emoji(not_detailed)) +"\n")
			answer += ("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + str(w.get_temperature('celsius')["temp"]) + "¬∫C \n")
			answer += ("–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: " + str(w.get_wind()["speed"]) + "–º/—Å\n")
			answer += ("–í–ª–∞–∂–Ω–æ—Å—Ç—å: " + str(w.get_humidity()) + "% \n\n")
			await message.answer(answer)
		except:
			await bot.send_message(message.chat.id, '–ø–æ—Ö–æ–∂–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ \n–ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
		if db.subscriber_exists(message.from_user.id) == 'da':
			pass
		else:
			# –µ—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
			db.add_subscriber(message.from_user.id)
			await bot.send_message(214196761, '{0} added'.format(message.from_user.id))
			

	


async def time_check():
	while True:
		schedule.run_pending()
		await asyncio.sleep(1)


async def mailing():
	loop  =  asyncio.get_event_loop()
	subscriptions = db.get_subscriptions()
	for s in subscriptions:
		city = str(db.subscription_city(s[1])[0])
		city = city[2:-3]
		observation = owm.weather_at_place(city)
		w = observation.get_weather()
		fc1 = owm.three_hours_forecast(city)
		f = fc1.get_forecast()
		reception_date = str(f)
		reception_date = reception_date[55:65]
		answer = ""
		for w in f:
			time = str(w.get_reference_time('iso'))
			date = time[:10] 
			if date == reception_date:
				time = str(time[11:16])
				temp = str(w.get_temperature('celsius')["temp"])
				detailed_status = w.get_detailed_status()
				not_detailed = w.get_status()
				answer1 = "{0}:\n{1}{3} {2}¬∫C\n\n".format(time,detailed_status,temp,emoji.get_emoji(not_detailed))
				answer = answer + answer1
		await bot.send_message(s[1],"‚è∞–í—Ä–µ–º—è –ø–æ–≥–æ–¥—ãüîî:")
		await bot.send_message(s[1],"–ü—Ä–æ–≥–Ω–æ–∑ –≥–æ—Ä–æ–¥–∞ {0}:\n{1}".format(city,answer))
		
		

def mailing123():
	asyncio.run_coroutine_threadsafe(mailing(), bot.loop)



schedule.every().day.at("07:00").do(mailing123) #–≤—Ä–µ–º—è –ø–æ –≥—Ä–∏–Ω–≤–∏—á—É

#mailing123()






if __name__ == '__main__':
	dp.loop.create_task(time_check())
	executor.start_polling(dp, skip_updates=True)
