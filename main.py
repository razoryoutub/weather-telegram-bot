import telebot
import time
import pyowm
import random
import tg_analytic


owm = pyowm.OWM('dbeee7264d80b183568973e21e1633fd', language = "ru")


#telegram bot
#bot = telebot.TeleBot("915096497:AAFvPSbMpvjdtNSucGNwSy6afA8UURu89nI")

#testbot

from telebot import apihelper
apihelper.proxy = {'https':'http://80.187.140.26:8080'}
bot = telebot.TeleBot("1225831912:AAG60sUGFoeRVePSufgLFM0Xaat176T2t1o")


@bot.message_handler(commands=['start', 'help'])
def handle_start_help(message):
 tg_analytic.statistics(message.chat.id, message.text)
 r = random.randint(0,2)
 if r == 0:
     bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –º–µ—Å—Ç–æ, –∞ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –≤ –Ω—ë–º ü§î')
 elif r == 1:
     bot.send_message(message.chat.id, '–í—Å—ë –ø—Ä–æ—Å—Ç–æ, —Å —Ç–µ–±—è –≥–æ—Ä–æ–¥ —Å –º–µ–Ω—è –ø–æ–≥–æ–¥–∞, –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ...')
 elif r == 2:
     bot.send_message(message.chat.id, '–∫—É, –ø–∏—à–∏ –≥–æ—Ä–æ–¥, —è –Ω–∞–ø–∏—à—É —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –≥—Ä–∞–¥—É—Å–æ–≤, –∫–∞–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –∏ —Ç.–¥.')

@bot.message_handler(content_types=['document', 'audio', 'sticker', 'photo']) 
def handle_docs_audio(message):
 tg_analytic.statistics(message.chat.id, message.text)
 r = random.randint(0,2)
 if r == 0:
     bot.send_message(message.chat.id, '–Ø –∂–¥–∞–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –Ω–æ —ç—Ç–æ —Ç–æ–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ')
 elif r == 1:
     bot.send_message(message.chat.id, '–û–≥–æ, —Ñ–∞–π–ª–∏–∫, –ø—Ä–∏–∫–æ–ª—å–Ω–æ')
 elif r == 2:
     bot.send_message(message.chat.id, '—è –∫–æ–Ω–µ—á–Ω–æ –ø–æ—Å–º–æ—Ç—Ä—é —ç—Ç–æ –Ω–∞ –¥–æ—Å—É–≥–µ, –Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ —á–µ–º —è –æ–±—ã—á–Ω–æ –∑–∞–Ω–∏–º–∞—é—Å—å ü§ñ')


@bot.message_handler(func=lambda message: True, content_types=['location'])
def echo_msg(message):
 f = open('location.txt', 'a')
 tg_analytic.statistics(message.chat.id, 'location')
 f.write(str(message.chat.id) + '  ' + str(message.location.latitude) + '  ' + str(message.location.longitude) + '\n')
 f.close()
 try:
   bot.send_message(message.chat.id, '–ø–æ–∫–∞–∑–∞–Ω–∞ –ø–æ–≥–æ–¥–∞ –≤–æ–∑–ª–µ –±–ª–∏–∂–∞–π—à–µ–π –º–µ—Ç–µ–æ—Å—Ç–∞–Ω—Ü–∏–∏')
   observation = owm.weather_at_coords(int(message.location.latitude), int(message.location.longitude))
   w = observation.get_weather()
   l = observation.get_location()
   if w.get_detailed_status() == "—è—Å–Ω–æ":
     answer = ("–í –≥–æ—Ä–æ–¥–µ "+ l.get_name() + " —Å–µ–π—á–∞—Å –Ø—Å–Ω–æ ‚òÄÔ∏è \n")

   elif w.get_detailed_status() == "–¥–æ–∂–¥—å":
     answer = ("–í –≥–æ—Ä–æ–¥–µ "+ l.get_name() + " —Å–µ–π—á–∞—Å –¥–æ–∂–¥—å ‚õà \n")

   elif w.get_detailed_status() == "–ª–µ–≥–∫–∏–π –¥–æ–∂–¥—å": 
     answer = ("–í –≥–æ—Ä–æ–¥–µ "+ l.get_name() + " —Å–µ–π—á–∞—Å –ª—ë–≥–∫–∏–π –¥–æ–∂–¥—å üí¶ \n")

   elif w.get_detailed_status() == "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏": 
     answer = ("–í –≥–æ—Ä–æ–¥–µ "+ l.get_name() + " —Å–µ–π—á–∞—Å –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ üå•Ô∏è \n")

   elif w.get_detailed_status() == "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å": 
     answer = ("–í –≥–æ—Ä–æ–¥–µ "+ l.get_name() + " —Å–µ–π—á–∞—Å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å üå§Ô∏è \n")

   else: 
     answer = ("–í –≥–æ—Ä–æ–¥–µ "+ l.get_name() + " —Å–µ–π—á–∞—Å " + w.get_detailed_status() + "\n")

   answer += ("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + str(w.get_temperature('celsius')["temp"]) + "¬∫C \n")
   answer += ("–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: " + str(w.get_wind()["speed"]))
   if int(str(w.get_wind()["speed"])[-1]) == 1:
    answer += (" –º–µ—Ç—Ä –≤ —Å–µ–∫—É–Ω–¥—É \n")
   elif int(str(w.get_wind()["speed"])[-1]) == 2 or int(str(w.get_wind()["speed"])[-1]) == 3 or int(str(w.get_wind()["speed"])[-1]) == 4:
    answer += (" –º–µ—Ç—Ä–∞ –≤ —Å–µ–∫—É–Ω–¥—É \n")
   else: 
    answer += (" –º–µ—Ç—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É \n")
   answer += ("–í–ª–∞–∂–Ω–æ—Å—Ç—å: " + str(w.get_humidity()) + "% \n\n")
   bot.send_message(message.chat.id, answer)
 except:
 	echo_msg(message)
 	"""
     r = random.randint(0,2)
     if owm.is_API_online():
     	if r == 0:
      	 bot.send_message(message.chat.id, '–û—Ç —Ç–µ–±—è —Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å –≥–æ—Ä–æ–¥ \n —Ç—ã –¥–∞–∂–µ —Ç—É—Ç –Ω–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è...')
     	elif r == 1:
      	 bot.send_message(message.chat.id, '—è —Å —Ç–æ–±–æ–π —Ç—É—Ç —à—É—Ç–∫–∏ —à—É—á—É —á—Ç–æ-–ª–∏? \n –ü–†–û–°–¢–û   –ù–ê–ü–ò–®–ò   –ì–û–†–û–î')
     	elif r == 2:
      	 bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≥–æ—Ä–æ–¥, –ø–æ–ø—ã—Ç–∞–π—Å—è –µ—â–µ —Ä–∞–∑...')
     else: 
     	bot.send_message(message.chat.id, '–ø–æ—Ö–æ–∂–µ —Å–µ—Ä–≤–µ—Ä–∞ –º–µ—Ç–µ–æ—Å–ª—É–∂–±—ã –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç \n –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ')
    """


@bot.message_handler(func=lambda message: True, content_types=['text'])
def echo_msg(message):
 tg_analytic.statistics(message.chat.id, message.text)
 if message.text[:11] == '8916sheshov':
        st = message.text.split(' ')
        if 'txt' in st or '—Ç—Ö—Ç' in st:
            tg_analytic.analysis(st,message.chat.id)
            with open('%s.txt' %message.chat.id ,'r',encoding='UTF-8') as file:
                bot.send_document(message.chat.id,file)
                tg_analytic.remove(message.chat.id)
        else:
         messages = tg_analytic.analysis(st,message.chat.id)
         bot.send_message(message.chat.id, messages)
 else:
  try:
   observation = owm.weather_at_place(message.text)
   w = observation.get_weather()
   if w.get_detailed_status() == "—è—Å–Ω–æ":
	   answer = ("–í –≥–æ—Ä–æ–¥–µ "+ message.text + " —Å–µ–π—á–∞—Å –Ø—Å–Ω–æ ‚òÄÔ∏è \n")

   elif w.get_detailed_status() == "–¥–æ–∂–¥—å":
	   answer = ("–í –≥–æ—Ä–æ–¥–µ "+ message.text + " —Å–µ–π—á–∞—Å –¥–æ–∂–¥—å ‚õà \n")

   elif w.get_detailed_status() == "–ª–µ–≥–∫–∏–π –¥–æ–∂–¥—å": 
	   answer = ("–í –≥–æ—Ä–æ–¥–µ "+ message.text + " —Å–µ–π—á–∞—Å –ª—ë–≥–∫–∏–π –¥–æ–∂–¥—å üí¶ \n")

   elif w.get_detailed_status() == "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏": 
	   answer = ("–í –≥–æ—Ä–æ–¥–µ "+ message.text + " —Å–µ–π—á–∞—Å –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ üå•Ô∏è \n")

   elif w.get_detailed_status() == "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å": 
	   answer = ("–í –≥–æ—Ä–æ–¥–µ "+ message.text + " —Å–µ–π—á–∞—Å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å üå§Ô∏è \n")

   else: 
 	   answer = ("–í –≥–æ—Ä–æ–¥–µ "+ message.text + " —Å–µ–π—á–∞—Å " + w.get_detailed_status() + "\n")

   answer += ("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + str(w.get_temperature('celsius')["temp"]) + "¬∫C \n")
   answer += ("–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: " + str(w.get_wind()["speed"]))
   if int(str(w.get_wind()["speed"])[-1]) == 1:
    answer += (" –º–µ—Ç—Ä –≤ —Å–µ–∫—É–Ω–¥—É \n")
   elif int(str(w.get_wind()["speed"])[-1]) == 2 or int(str(w.get_wind()["speed"])[-1]) == 3 or int(str(w.get_wind()["speed"])[-1]) == 4:
    answer += (" –º–µ—Ç—Ä–∞ –≤ —Å–µ–∫—É–Ω–¥—É \n")
   else: 
    answer += (" –º–µ—Ç—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É \n")
   answer += ("–í–ª–∞–∂–Ω–æ—Å—Ç—å: " + str(w.get_humidity()) + "% \n\n")
   bot.send_message(message.chat.id, answer)
  except:
  	echo_msg(message)
  	"""
     r = random.randint(0,2)
     if owm.is_API_online():
     	if r == 0:
      	 bot.send_message(message.chat.id, '–û—Ç —Ç–µ–±—è —Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å –≥–æ—Ä–æ–¥ \n —Ç—ã –¥–∞–∂–µ —Ç—É—Ç –Ω–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è...')
     	elif r == 1:
      	 bot.send_message(message.chat.id, '—è —Å —Ç–æ–±–æ–π —Ç—É—Ç —à—É—Ç–∫–∏ —à—É—á—É —á—Ç–æ-–ª–∏? \n –ü–†–û–°–¢–û   –ù–ê–ü–ò–®–ò   –ì–û–†–û–î')
     	elif r == 2:
      	 bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≥–æ—Ä–æ–¥, –ø–æ–ø—ã—Ç–∞–π—Å—è –µ—â–µ —Ä–∞–∑...')
     else: 
     	bot.send_message(message.chat.id, '–ø–æ—Ö–æ–∂–µ —Å–µ—Ä–≤–µ—Ä–∞ –º–µ—Ç–µ–æ—Å–ª—É–∂–±—ã –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç \n –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ')
    """
 


bot.polling(none_stop=True)